root: true
env:
  browser: true
extends:
  - eslint:recommended
  - plugin:@typescript-eslint/recommended
  - plugin:prettier/recommended
plugins:
  - '@typescript-eslint'
  - import
parser: '@typescript-eslint/parser'
parserOptions:
  ecmaVersion: 2018
  sourceType: module
  project:
    - './tsconfig.eslint.json'
  ecmaFeatures:
    jsx: true
rules:
  # turn on errors for missing imports
  import/no-unresolved: error
  prettier/prettier:
    - warn
    - # Specify the line length that the printer will wrap on.
      printWidth: 100
      # Specify the number of spaces per indentation-level.
      tabWidth: 2
      # Indent lines with tabs instead of spaces.
      useTabs: false
      # Print semicolons at the ends of statements.
      semi: true
      # Use single quotes instead of double quotes.
      singleQuote: true
      # Change when properties in objects are quoted.
      # as-needed: Only add quotes around object properties where required.
      quoteProps: 'as-needed'
      # Use single quotes instead of double quotes in JSX.
      jsxSingleQuote: true
      # Print trailing commas wherever possible in multi-line comma-separated syntactic structures.
      # (A single-line array, for example, never gets trailing commas.)
      trailingComma: 'all'
      # Print spaces between brackets in object literals.
      # true: Example: { foo: bar }.
      bracketSpacing: true
      # Put the > of a multi-line HTML (HTML, JSX, Vue, Angular) element at the end of
      # the last line instead of being alone on the next line (does not apply to self closing elements).
      bracketSameLine: false
      # Include parentheses around a sole arrow function parameter.
      # avoid: Omit parens when possible. Example: x => x
      arrowParens: avoid
  '@typescript-eslint/no-var-requires': off
  '@typescript-eslint/no-unused-vars': off
  '@typescript-eslint/no-explicit-any': off
  '@typescript-eslint/explicit-module-boundary-types': off
  '@typescript-eslint/no-empty-function': off
  '@typescript-eslint/ban-ts-comment': off
  '@typescript-eslint/no-this-alias': warn
  '@typescript-eslint/ban-types': warn
  no-empty: off
  no-control-regex: warn
settings:
  import/parsers:
    '@typescript-eslint/parser':
      - .ts
      - .tsx
  import/resolver:
    typescript: { }
overrides:
  - files:
      - '**/*.{js,jsx,ts,tsx}'
    rules:
      import/order:
        - warn
        - groups:
            - builtin
            - external
            - parent
            - sibling
            - index
            - object
            - type
          pathGroups:
            - pattern: '@alias/**'
              group: parent
              position: before
          alphabetize:
            order: asc
          newlines-between: always

